<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<style type="text/css">
</style>
<script type="text/javascript" src="jQuery.js"></script>
<script type="text/javascript">
	$(function() {
		// Javascript
		//		배열 : 대괄호 []
		//		객체 : 중괄호 {}
		let arr = [1, 56, 3, 86, 123];
		let obj = {menu: "초밥", price: 15000}
		
		// 배열 속에 객체
		//	이 형태로 DB에 있는 데이터를 표현한 것 : JSON
		let arrobj = [
			{
				menu: "라면",
				price: 4000,
			},
			{
				menu: "김밥",
				price: 3000,
			},
			{
				menu: "돈까스",
				price: 7000,
			},
		];
		
		// JavaScript의 배열 대상 반복문
		//		for(var i = 0; ...)		: 인덱스 활용도가 높은편
		//		for(var key of arrobj)	: 객체에 순서대로 접근이 용이한 편
		
		//		$.each(반복문을 돌릴 대상 배열, 데이터 하나 만날때마다 호출할 콜백함수)
		//			- 인덱스도 가지고 있고, 객체에 접근하기에도 용이함
		
		$.each(arrobj, function(i, lunch) {// 콜백 함수에서, ? ,  데이터에 대한 별칭
			alert(i + 1 + ")" + lunch.menu + " : " + lunch.price);
		});
		
		//DOM객체 대상 반복문
		//	$(선택자).each(DOM객체 하나 만날때마다 호출할 콜백함수)
		
		// h1 => 순서대로 글자의 크기가 10 / 20 / 30 pt가 되도록
		$("h1").each(size, function(i, size) {
			$(h).css("font-size", ((i + 1) * 10) + "pt");
			
		});
		let size = [ 10, 20, 30 ];
			
		$.each(size, function(i, size) {
			let font = $("#"+"hh"+i).val();
			$("hh"+i+1).css("font-size", i+"1"+"pt")	
		});
		
	});
</script>
</head>
<body>
	<h1 id="hh1">ㅋㅋㅋㅋㅋ</h1>
	<h1 id="hh2">ㅎㅎㅎㅎㅎ</h1>
	<h1 id="hh3">ㅠㅠㅠㅠㅠ</h1>
</body>
</html>